<Grid x:Class="EverythingToolbar.SettingsControl"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:properties="clr-namespace:EverythingToolbar.Properties"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:h="clr-namespace:EverythingToolbar.Helpers"
      xmlns:local="clr-namespace:EverythingToolbar"
      Background="Transparent"
      Margin="10, 0"
      MouseLeftButtonUp="OnMouseLeftButtonUp">

    <Grid.ContextMenu>
        <ContextMenu Focusable="False">
            <i:Interaction.Behaviors>
                <h:DpiScaling x:Name="dpiScaling" />
            </i:Interaction.Behaviors>
            
            <ContextMenu.Resources>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="Focusable" Value="False" />
                </Style>
            </ContextMenu.Resources>

            <MenuItem Header="{x:Static properties:Resources.SettingsRegularExpressions}"
                      IsCheckable="True"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isRegExEnabled, Mode=TwoWay}"
                      IsEnabled="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsRegExEnabled, Mode=OneWay}"
                      Click="OnMenuItemClicked"/>
            <MenuItem Header="{x:Static properties:Resources.SettingsMatchCase}"
                      IsCheckable="True"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isMatchCase, Mode=TwoWay}"
                      IsEnabled="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchCase, Mode=OneWay}"
                      Click="OnMenuItemClicked"/>
            <MenuItem Header="{x:Static properties:Resources.SettingsMatchPath}"
                      IsCheckable="True"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isMatchPath, Mode=TwoWay}"
                      IsEnabled="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchPath, Mode=OneWay}"
                      Click="OnMenuItemClicked"/>
            <MenuItem Header="{x:Static properties:Resources.SettingsMatchWholeWord}"
                      IsCheckable="True"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isMatchWholeWord, Mode=TwoWay}"
                      Click="OnMenuItemClicked">
                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Focusable" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchWholeWord, Mode=OneWay}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchWholeWord, Mode=OneWay}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=isRegExEnabled, Mode=OneWay}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static properties:Resources.SettingsSortBy}" Name="SortByMenu">
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByNameAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByNameDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByPathAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByPathDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortBySizeAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortBySizeDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByExtensionAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByExtensionDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByTypeNameAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByTypeNameDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateCreatedAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateCreatedDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateModifiedAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateModifiedDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByAttributesAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByAttributesDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByFileListFilenameAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByFileListFilenameDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByRunCountAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByRunCountDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateRecentlyChangedAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateRecentlyChangedDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateAccessedAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateAccessedDescending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateRunAscending}"
                          Click="OnSortByClicked"/>
                <MenuItem IsCheckable="True"
                          Header="{x:Static properties:Resources.SortByDateRunDescending}"
                          Click="OnSortByClicked"/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static properties:Resources.SettingsPreferences}">
                <MenuItem Header="{x:Static properties:Resources.SettingsRules}"
                          Click="OpenRulesWindow"/>
                <MenuItem Header="{x:Static properties:Resources.SettingsChangeShortcut}"
                          Click="OpenShortcutWindow"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.SettingsUseEverythingFilters}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isImportFilters, Mode=TwoWay}"
                          Click="OnMenuItemClicked"/>
                <MenuItem Header="{x:Static properties:Resources.SettingsHideEmptyResults}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isHideEmptySearchResults, Mode=TwoWay}"
                          Click="OnMenuItemClicked"/>
                <MenuItem Header="{x:Static properties:Resources.SettingsShowResultsCount}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isShowResultsCount, Mode=TwoWay}"
                          Click="OnMenuItemClicked"/>
                <MenuItem Header="{x:Static properties:Resources.SettingsShowQuickToggles}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isShowQuickToggles, Mode=TwoWay}"
                          Click="OnMenuItemClicked"/>
                <MenuItem Header="{x:Static properties:Resources.SettingsEnableHistory}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isEnableHistory, Mode=TwoWay}"
                          Click="OnMenuItemClicked"/>
                <MenuItem Header="{x:Static properties:Resources.SettingsReplaceStartMenuSearch}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isReplaceStartMenuSearch, Mode=TwoWay}"
                          Click="OnMenuItemClicked"/>
                <MenuItem Header="{x:Static properties:Resources.SettingsDisableAnimations}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isAnimationsDisabled, Mode=TwoWay}"
                          Click="OnMenuItemClicked"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.SettingsView}"
                          Name="ItemTemplateMenu"
                          Click="OnItemTemplateClicked" />
                <MenuItem Header="{x:Static properties:Resources.SettingsTheme}"
                          Name="ThemeMenu"
                          Click="OnThemeClicked" />
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.SettingsAbout}"
                      Click="OpenAboutWindow"/>
        </ContextMenu>
    </Grid.ContextMenu>

    <Border Background="Transparent">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property= "TextBlock.Foreground" Value="{DynamicResource TabForeground}" />
                <Style.Triggers>
                    <Trigger Property ="IsMouseOver" Value="True">
                        <Setter Property= "TextBlock.Foreground" Value="{DynamicResource TabForegroundHover}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <TextBlock x:Name="ThreeDotTextBlock"
               Text="⋯"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               FontSize="14pt"
               Padding="7, 0, 7, 6">
        </TextBlock>
    </Border>
    
</Grid>
